/*
 * This file is generated by jOOQ.
 */
package com.sunnymix.wingdoc.dao.jooq.tables.records;


import com.sunnymix.wingdoc.dao.jooq.tables.Block;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlockRecord extends UpdatableRecordImpl<BlockRecord> implements Record8<String, String, Integer, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>wingdoc.block.id</code>. ID
     */
    public BlockRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>wingdoc.block.id</code>. ID
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>wingdoc.block.doc_id</code>. 文档ID
     */
    public BlockRecord setDocId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>wingdoc.block.doc_id</code>. 文档ID
     */
    public String getDocId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>wingdoc.block.pos</code>. 位置
     */
    public BlockRecord setPos(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>wingdoc.block.pos</code>. 位置
     */
    public Integer getPos() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>wingdoc.block.type</code>. 类型
     */
    public BlockRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>wingdoc.block.type</code>. 类型
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>wingdoc.block.status</code>. 状态
     */
    public BlockRecord setStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>wingdoc.block.status</code>. 状态
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>wingdoc.block.text</code>. 内容
     */
    public BlockRecord setText(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>wingdoc.block.text</code>. 内容
     */
    public String getText() {
        return (String) get(5);
    }

    /**
     * Setter for <code>wingdoc.block.link</code>. 链接
     */
    public BlockRecord setLink(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>wingdoc.block.link</code>. 链接
     */
    public String getLink() {
        return (String) get(6);
    }

    /**
     * Setter for <code>wingdoc.block.img</code>. 图片
     */
    public BlockRecord setImg(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>wingdoc.block.img</code>. 图片
     */
    public String getImg() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, Integer, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, Integer, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Block.BLOCK.ID;
    }

    @Override
    public Field<String> field2() {
        return Block.BLOCK.DOC_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Block.BLOCK.POS;
    }

    @Override
    public Field<String> field4() {
        return Block.BLOCK.TYPE;
    }

    @Override
    public Field<String> field5() {
        return Block.BLOCK.STATUS;
    }

    @Override
    public Field<String> field6() {
        return Block.BLOCK.TEXT;
    }

    @Override
    public Field<String> field7() {
        return Block.BLOCK.LINK;
    }

    @Override
    public Field<String> field8() {
        return Block.BLOCK.IMG;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDocId();
    }

    @Override
    public Integer component3() {
        return getPos();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public String component6() {
        return getText();
    }

    @Override
    public String component7() {
        return getLink();
    }

    @Override
    public String component8() {
        return getImg();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDocId();
    }

    @Override
    public Integer value3() {
        return getPos();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public String value6() {
        return getText();
    }

    @Override
    public String value7() {
        return getLink();
    }

    @Override
    public String value8() {
        return getImg();
    }

    @Override
    public BlockRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public BlockRecord value2(String value) {
        setDocId(value);
        return this;
    }

    @Override
    public BlockRecord value3(Integer value) {
        setPos(value);
        return this;
    }

    @Override
    public BlockRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public BlockRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public BlockRecord value6(String value) {
        setText(value);
        return this;
    }

    @Override
    public BlockRecord value7(String value) {
        setLink(value);
        return this;
    }

    @Override
    public BlockRecord value8(String value) {
        setImg(value);
        return this;
    }

    @Override
    public BlockRecord values(String value1, String value2, Integer value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BlockRecord
     */
    public BlockRecord() {
        super(Block.BLOCK);
    }

    /**
     * Create a detached, initialised BlockRecord
     */
    public BlockRecord(String id, String docId, Integer pos, String type, String status, String text, String link, String img) {
        super(Block.BLOCK);

        setId(id);
        setDocId(docId);
        setPos(pos);
        setType(type);
        setStatus(status);
        setText(text);
        setLink(link);
        setImg(img);
    }

    /**
     * Create a detached, initialised BlockRecord
     */
    public BlockRecord(com.sunnymix.wingdoc.dao.jooq.tables.pojos.Block value) {
        super(Block.BLOCK);

        if (value != null) {
            setId(value.getId());
            setDocId(value.getDocId());
            setPos(value.getPos());
            setType(value.getType());
            setStatus(value.getStatus());
            setText(value.getText());
            setLink(value.getLink());
            setImg(value.getImg());
        }
    }
}
